// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: kv_store.proto

package kvstore

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Representa uma única entrada em um Vector Clock.
type VectorClockEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Counter       uint64                 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VectorClockEntry) Reset() {
	*x = VectorClockEntry{}
	mi := &file_kv_store_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VectorClockEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorClockEntry) ProtoMessage() {}

func (x *VectorClockEntry) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorClockEntry.ProtoReflect.Descriptor instead.
func (*VectorClockEntry) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{0}
}

func (x *VectorClockEntry) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *VectorClockEntry) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

// Um Vector Clock, representado como uma lista de entradas.
type VectorClock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*VectorClockEntry    `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VectorClock) Reset() {
	*x = VectorClock{}
	mi := &file_kv_store_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VectorClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorClock) ProtoMessage() {}

func (x *VectorClock) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorClock.ProtoReflect.Descriptor instead.
func (*VectorClock) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{1}
}

func (x *VectorClock) GetEntries() []*VectorClockEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Representa uma versão específica de um valor para uma chave.
type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Value string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// O vector clock associado a esta versão. Opcional para flexibilidade.
	VectorClock   *VectorClock `protobuf:"bytes,2,opt,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
	Timestamp     uint64       `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                            // Nanosegundos desde a época Unix.
	WriterNodeId  string       `protobuf:"bytes,4,opt,name=writer_node_id,json=writerNodeId,proto3" json:"writer_node_id,omitempty"` // O ID do nó que originalmente escreveu esta versão.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_kv_store_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{2}
}

func (x *Version) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Version) GetVectorClock() *VectorClock {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

func (x *Version) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Version) GetWriterNodeId() string {
	if x != nil {
		return x.WriterNodeId
	}
	return ""
}

// Requisição para a operação Put.
type PutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_kv_store_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{3}
}

func (x *PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Requisição para a operação Get.
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_kv_store_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{4}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Resposta para a operação Put.
type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_kv_store_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{5}
}

func (x *PutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Resposta para a operação Get.
type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Versions      []*Version             `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"` // Todas as versões ativas encontradas para a chave.
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_kv_store_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_store_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_kv_store_proto_rawDescGZIP(), []int{6}
}

func (x *GetResponse) GetVersions() []*Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *GetResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_kv_store_proto protoreflect.FileDescriptor

const file_kv_store_proto_rawDesc = "" +
	"\n" +
	"\x0ekv_store.proto\x12\akvstore\"E\n" +
	"\x10VectorClockEntry\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\acounter\x18\x02 \x01(\x04R\acounter\"B\n" +
	"\vVectorClock\x123\n" +
	"\aentries\x18\x01 \x03(\v2\x19.kvstore.VectorClockEntryR\aentries\"\x9c\x01\n" +
	"\aVersion\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\fvector_clock\x18\x02 \x01(\v2\x14.kvstore.VectorClockR\vvectorClock\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12$\n" +
	"\x0ewriter_node_id\x18\x04 \x01(\tR\fwriterNodeId\"4\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x1e\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"L\n" +
	"\vPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"`\n" +
	"\vGetResponse\x12,\n" +
	"\bversions\x18\x01 \x03(\v2\x10.kvstore.VersionR\bversions\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage2m\n" +
	"\aKvStore\x120\n" +
	"\x03Put\x12\x13.kvstore.PutRequest\x1a\x14.kvstore.PutResponse\x120\n" +
	"\x03Get\x12\x13.kvstore.GetRequest\x1a\x14.kvstore.GetResponseB\x0fZ\r./pkg/kvstoreb\x06proto3"

var (
	file_kv_store_proto_rawDescOnce sync.Once
	file_kv_store_proto_rawDescData []byte
)

func file_kv_store_proto_rawDescGZIP() []byte {
	file_kv_store_proto_rawDescOnce.Do(func() {
		file_kv_store_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kv_store_proto_rawDesc), len(file_kv_store_proto_rawDesc)))
	})
	return file_kv_store_proto_rawDescData
}

var file_kv_store_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kv_store_proto_goTypes = []any{
	(*VectorClockEntry)(nil), // 0: kvstore.VectorClockEntry
	(*VectorClock)(nil),      // 1: kvstore.VectorClock
	(*Version)(nil),          // 2: kvstore.Version
	(*PutRequest)(nil),       // 3: kvstore.PutRequest
	(*GetRequest)(nil),       // 4: kvstore.GetRequest
	(*PutResponse)(nil),      // 5: kvstore.PutResponse
	(*GetResponse)(nil),      // 6: kvstore.GetResponse
}
var file_kv_store_proto_depIdxs = []int32{
	0, // 0: kvstore.VectorClock.entries:type_name -> kvstore.VectorClockEntry
	1, // 1: kvstore.Version.vector_clock:type_name -> kvstore.VectorClock
	2, // 2: kvstore.GetResponse.versions:type_name -> kvstore.Version
	3, // 3: kvstore.KvStore.Put:input_type -> kvstore.PutRequest
	4, // 4: kvstore.KvStore.Get:input_type -> kvstore.GetRequest
	5, // 5: kvstore.KvStore.Put:output_type -> kvstore.PutResponse
	6, // 6: kvstore.KvStore.Get:output_type -> kvstore.GetResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_kv_store_proto_init() }
func file_kv_store_proto_init() {
	if File_kv_store_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kv_store_proto_rawDesc), len(file_kv_store_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kv_store_proto_goTypes,
		DependencyIndexes: file_kv_store_proto_depIdxs,
		MessageInfos:      file_kv_store_proto_msgTypes,
	}.Build()
	File_kv_store_proto = out.File
	file_kv_store_proto_goTypes = nil
	file_kv_store_proto_depIdxs = nil
}
